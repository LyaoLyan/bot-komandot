
const TelegramApi = require('node-telegram-bot-api');
const sequelize = require("./db");
const UserModel = require("./models/user.model");
const token = '5580876526:AAFQeKmBlqmXoPC5eZhwRa4vVRTELunTNz4';
const bot = new TelegramApi(token, { polling: true });

const AdminModule = require('./modules/admin.module');
const UserModule = require('./modules/user.module');

const { Op } = require("sequelize")

// function to encode file data to base64 encoded string
const base64_encode = (file) => {
    // read binary data
    var bitmap = fs.readFileSync(file)
    // convert binary data to base64 encoded string
    return new Buffer(bitmap).toString('base64')
}



const checkDate = (itemElem) => {
    return (/[a-z–∞-—è—ë]/.test(itemElem) || itemElem.length != 10)
}

const checkPhone = (itemElem) => {
    return (/[a-z–∞-—è—ë]/.test(itemElem))
}
const checkName = (itemElem) => {
    return /\d/.test(itemElem)
}

const start = async () => {


    await AdminModule.test();

    bot.on('message', async msg => {

        const text = msg.text;
        const chatId = msg.chat.id;
        try {
            await sequelize.authenticate();
            await sequelize.sync();
        } catch (error) {
            return bot.sendMessage(chatId, `–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –Ω–∞—Å –≤–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–π–¥–∏—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ üòå`);
        }


        try {

            await checkUserInDb(chatId, msg);

            const user = await UserModel.findOne({ where: { chatId: String(chatId) } });

            switch (text) {
                case '/start': {
                    await startFunc(user, chatId, msg);
                }
                    break;
                case '/profile': {
                    await profileFunc(user, chatId, msg);
                }
                    break;
                case 'D4%d87k}vLGG': {
                    await becomeAdmin(user, chatId, msg);
                }
                    break;
                case '/search_by_date': {
                    await searchByDate(user, chatId, msg);
                }
                    break;
                case '/search_phone': {
                    if (!user.admin) {
                        return bot.sendMessage(chatId, '–≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
                    }
                    await searchPhone(user, chatId, msg);
                }
                    break;
                case '/search_id': {
                    if (!user.admin) {
                        return bot.sendMessage(chatId, '–≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
                    }
                    await searchId(user, chatId, msg);
                }
                    break;
                case '/send_message': {
                    if (!user.admin) {
                        return bot.sendMessage(chatId, '–≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
                    }
                    await sendMessageFromAdmin(user, chatId, msg);
                }
                    break;
                default: {

                    await defaultFunc(user, chatId, msg);
                }
                    break;
            }

        } catch (error) {
            console.log(error)
            await bot.sendMessage(chatId, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É")
        }


        // console.log(newUser.chatId);

        // if (text.indexOf('/name') !== -1) {
        //     const name = text.substr(5)
        //     return bot.sendMessage(newUser.chatId, `–¢–≤–æ–µ –∏–º—è ${name}. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ—Å–ª–µ /phone —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. \n–ü—Ä–∏–º–µ—Ä: /phone 89999999999`)
        // }
        // if (text.indexOf('/phone') !== -1) {
        //     const phone = text.substr(6)
        //     return bot.sendMessage(newUser.chatId, `–¢–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω ${phone}. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!`)
        // }

    });

};
start();





/* #region  Helper function */
const checkUserInDb = async (id, msg) => {

    const { from, chat } = msg;
    console.log(id);
    let test = await UserModel.findOne({ where: { chatId: String(id) } });

    if (!test) {
        console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        await UserModel.create({ chatId: id });

    }
    test = await UserModel.findOne({ where: { chatId: String(id) } });
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

};

const startFunc = async (user, chatId, msg) => {
    user.state = 0;

    await user.save();
    return bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å –Ω–∞ –±–æ—Ä—Ç—É üö¢ –∫–æ—Ä–∞–±–ª—è "–ö–æ–º–∞–Ω–¥–æ—Ä"! üëã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —á–∞—Ç-–±–æ—Ç–µ –∑–∞ 10 —Å–µ–∫—É–Ω–¥ –∏ –ø–æ–ª—É—á–∏—Ç–µ 100 –ë–ê–õ–õ–û–í‚ùóÔ∏è –Ω–∞ –∫–∞—Ä—Ç—É "–ö–æ–ø–∏–ª–∫–∞". –ü—Ä–∏—Å—Ç—É–ø–∏–º! üî•‚¨áÔ∏è\n1Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –§–ò–û`);
};


const profileFunc = async (user, chatId, msg) => {
    const file = `image/jpg;base64,${user.image}`;
    const fileOpts = {
        filename: 'image',
        contentType: 'image/jpg',
    };
    bot.sendMessage(chatId, `–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\nID: ${user.id}\n–§–ò–û: ${user.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}`);
    return bot.sendPhoto(chatId, Buffer.from(file.substr(17), 'base64'), fileOpts);
};

const becomeAdmin = async (user, chatId, msg) => {
    user.admin = true;
    await user.save();
    return bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∫–æ–º–∞–Ω–¥—É: \n/search_by_date - –ü–æ–∏—Å–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è\n/search_phone - –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É\n/search_id - –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\n/send_message - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ ID`);
};

const searchByDate = async (user, chatId, msg) => {
    user.state = 11;
    await user.save();
    return bot.sendMessage(chatId, `–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –ø–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 2022-01-02, –≥–¥–µ 2022 - –≥–æ–¥, 01 - –º–µ—Å—è—Ü, 02 ‚Äì –¥–µ–Ω—å.`);
};
const searchPhone = async (user, chatId, msg) => {
    user.state = 12;
    await user.save();
    return bot.sendMessage(chatId, `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "89999999999".`);
};
const searchId = async (user, chatId, msg) => {
    user.state = 13;
    await user.save();
    return bot.sendMessage(chatId, `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.`);
};
/* #endregion */
const sendMessageFromAdmin = async (user, chatId, msg) => {
    user.state = 14;
    await user.save();
    return bot.sendMessage(chatId, `–ù–∞–ø–∏—à–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /. –ü—Ä–∏–º–µ—Ä:\n12 8 4 2 6 / –ü—Ä–∏–≤–µ—Ç!`);
}

const defaultFunc = async (user, chatId, msg) => {

    switch (user.state) {
        case 0: {
            await UserModule.calculate0(bot, user, chatId, msg);
        }
            break;
        case 1: {
            await UserModule.calculate1(bot, user, chatId, msg);
        }
            break;
        case 2: {
            await UserModule.calculate2(bot, user, chatId, msg);
        }
            break;
        case 11: {
            if (!user.admin) {
                return bot.sendMessage(chatId, '–£–ø—Å! –≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã. –ü–æ—Ö–æ–∂–µ, –í—ã –Ω–µ –∏–∑ –∏—Ö —á–∏—Å–ª–∞. –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
            }
            await AdminModule.calculate11(bot, user, chatId, msg);
        }
            break;
        case 12: {
            if (!user.admin) {

                console.log('12 –¢—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
                return bot.sendMessage(chatId, '–£–ø—Å! –≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã. –ü–æ—Ö–æ–∂–µ, –í—ã –Ω–µ –∏–∑ –∏—Ö —á–∏—Å–ª–∞. –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
            }
            await AdminModule.calculate12(bot, user, chatId, msg);
        }
            break;
        case 13: {
            if (!user.admin) {
                console.log('13 –¢—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
                return bot.sendMessage(chatId, '–£–ø—Å! –≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã. –ü–æ—Ö–æ–∂–µ, –í—ã –Ω–µ –∏–∑ –∏—Ö —á–∏—Å–ª–∞. –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
            }
            await AdminModule.calculate13(bot, user, chatId, msg);
        }
            break;
        case 14: {
            if (!user.admin) {
                console.log('13 –¢—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
                return bot.sendMessage(chatId, '–£–ø—Å! –≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã. –ü–æ—Ö–æ–∂–µ, –í—ã –Ω–µ –∏–∑ –∏—Ö —á–∏—Å–ª–∞. –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mishagina08');
            }
            await AdminModule.calculate14(bot, user, chatId, msg);
        }
            break;
        default:
            break;
    }

};



